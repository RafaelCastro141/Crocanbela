// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ServidorPedidos.proto

/*
Package ServidorPedidos is a generated protocol buffer package.

It is generated from these files:
	ServidorPedidos.proto

It has these top-level messages:
	ProdutoItem
	RegistroPedido
	PedidoResponse
	ModoBusca
	Resultado
*/
package ServidorPedidos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ModoBusca_Modo int32

const (
	ModoBusca_NOME  ModoBusca_Modo = 0
	ModoBusca_ID    ModoBusca_Modo = 1
	ModoBusca_TODOS ModoBusca_Modo = 2
)

var ModoBusca_Modo_name = map[int32]string{
	0: "NOME",
	1: "ID",
	2: "TODOS",
}
var ModoBusca_Modo_value = map[string]int32{
	"NOME":  0,
	"ID":    1,
	"TODOS": 2,
}

func (x ModoBusca_Modo) String() string {
	return proto.EnumName(ModoBusca_Modo_name, int32(x))
}
func (ModoBusca_Modo) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type ProdutoItem struct {
	IdProduto int32   `protobuf:"varint,1,opt,name=idProduto" json:"idProduto,omitempty"`
	Qtd       int32   `protobuf:"varint,2,opt,name=qtd" json:"qtd,omitempty"`
	Valor     float64 `protobuf:"fixed64,3,opt,name=valor" json:"valor,omitempty"`
	Nome      string  `protobuf:"bytes,4,opt,name=nome" json:"nome,omitempty"`
}

func (m *ProdutoItem) Reset()                    { *m = ProdutoItem{} }
func (m *ProdutoItem) String() string            { return proto.CompactTextString(m) }
func (*ProdutoItem) ProtoMessage()               {}
func (*ProdutoItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProdutoItem) GetIdProduto() int32 {
	if m != nil {
		return m.IdProduto
	}
	return 0
}

func (m *ProdutoItem) GetQtd() int32 {
	if m != nil {
		return m.Qtd
	}
	return 0
}

func (m *ProdutoItem) GetValor() float64 {
	if m != nil {
		return m.Valor
	}
	return 0
}

func (m *ProdutoItem) GetNome() string {
	if m != nil {
		return m.Nome
	}
	return ""
}

type RegistroPedido struct {
	Id          int32          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DataEntrada string         `protobuf:"bytes,2,opt,name=dataEntrada" json:"dataEntrada,omitempty"`
	DataEntrega string         `protobuf:"bytes,3,opt,name=dataEntrega" json:"dataEntrega,omitempty"`
	Endereco    string         `protobuf:"bytes,4,opt,name=endereco" json:"endereco,omitempty"`
	Telefone    string         `protobuf:"bytes,5,opt,name=telefone" json:"telefone,omitempty"`
	Email       string         `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	Observacao  string         `protobuf:"bytes,7,opt,name=observacao" json:"observacao,omitempty"`
	Cliente     string         `protobuf:"bytes,8,opt,name=cliente" json:"cliente,omitempty"`
	Itens       []*ProdutoItem `protobuf:"bytes,9,rep,name=itens" json:"itens,omitempty"`
}

func (m *RegistroPedido) Reset()                    { *m = RegistroPedido{} }
func (m *RegistroPedido) String() string            { return proto.CompactTextString(m) }
func (*RegistroPedido) ProtoMessage()               {}
func (*RegistroPedido) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegistroPedido) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RegistroPedido) GetDataEntrada() string {
	if m != nil {
		return m.DataEntrada
	}
	return ""
}

func (m *RegistroPedido) GetDataEntrega() string {
	if m != nil {
		return m.DataEntrega
	}
	return ""
}

func (m *RegistroPedido) GetEndereco() string {
	if m != nil {
		return m.Endereco
	}
	return ""
}

func (m *RegistroPedido) GetTelefone() string {
	if m != nil {
		return m.Telefone
	}
	return ""
}

func (m *RegistroPedido) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegistroPedido) GetObservacao() string {
	if m != nil {
		return m.Observacao
	}
	return ""
}

func (m *RegistroPedido) GetCliente() string {
	if m != nil {
		return m.Cliente
	}
	return ""
}

func (m *RegistroPedido) GetItens() []*ProdutoItem {
	if m != nil {
		return m.Itens
	}
	return nil
}

type PedidoResponse struct {
	Pedido  *RegistroPedido `protobuf:"bytes,1,opt,name=pedido" json:"pedido,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Error   int32           `protobuf:"varint,3,opt,name=error" json:"error,omitempty"`
}

func (m *PedidoResponse) Reset()                    { *m = PedidoResponse{} }
func (m *PedidoResponse) String() string            { return proto.CompactTextString(m) }
func (*PedidoResponse) ProtoMessage()               {}
func (*PedidoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PedidoResponse) GetPedido() *RegistroPedido {
	if m != nil {
		return m.Pedido
	}
	return nil
}

func (m *PedidoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PedidoResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

type ModoBusca struct {
	Tipo ModoBusca_Modo `protobuf:"varint,1,opt,name=tipo,enum=ServidorPedidos.ModoBusca_Modo" json:"tipo,omitempty"`
	Id   int32          `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Nome string         `protobuf:"bytes,3,opt,name=nome" json:"nome,omitempty"`
}

func (m *ModoBusca) Reset()                    { *m = ModoBusca{} }
func (m *ModoBusca) String() string            { return proto.CompactTextString(m) }
func (*ModoBusca) ProtoMessage()               {}
func (*ModoBusca) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ModoBusca) GetTipo() ModoBusca_Modo {
	if m != nil {
		return m.Tipo
	}
	return ModoBusca_NOME
}

func (m *ModoBusca) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ModoBusca) GetNome() string {
	if m != nil {
		return m.Nome
	}
	return ""
}

type Resultado struct {
	Pedidos  []*RegistroPedido `protobuf:"bytes,1,rep,name=pedidos" json:"pedidos,omitempty"`
	Response *PedidoResponse   `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (m *Resultado) Reset()                    { *m = Resultado{} }
func (m *Resultado) String() string            { return proto.CompactTextString(m) }
func (*Resultado) ProtoMessage()               {}
func (*Resultado) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Resultado) GetPedidos() []*RegistroPedido {
	if m != nil {
		return m.Pedidos
	}
	return nil
}

func (m *Resultado) GetResponse() *PedidoResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*ProdutoItem)(nil), "ServidorPedidos.ProdutoItem")
	proto.RegisterType((*RegistroPedido)(nil), "ServidorPedidos.RegistroPedido")
	proto.RegisterType((*PedidoResponse)(nil), "ServidorPedidos.PedidoResponse")
	proto.RegisterType((*ModoBusca)(nil), "ServidorPedidos.ModoBusca")
	proto.RegisterType((*Resultado)(nil), "ServidorPedidos.Resultado")
	proto.RegisterEnum("ServidorPedidos.ModoBusca_Modo", ModoBusca_Modo_name, ModoBusca_Modo_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Pedidos service

type PedidosClient interface {
	Salvar(ctx context.Context, in *RegistroPedido, opts ...grpc.CallOption) (*PedidoResponse, error)
	Buscar(ctx context.Context, in *ModoBusca, opts ...grpc.CallOption) (*Resultado, error)
	Excluir(ctx context.Context, in *RegistroPedido, opts ...grpc.CallOption) (*PedidoResponse, error)
}

type pedidosClient struct {
	cc *grpc.ClientConn
}

func NewPedidosClient(cc *grpc.ClientConn) PedidosClient {
	return &pedidosClient{cc}
}

func (c *pedidosClient) Salvar(ctx context.Context, in *RegistroPedido, opts ...grpc.CallOption) (*PedidoResponse, error) {
	out := new(PedidoResponse)
	err := grpc.Invoke(ctx, "/ServidorPedidos.Pedidos/Salvar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pedidosClient) Buscar(ctx context.Context, in *ModoBusca, opts ...grpc.CallOption) (*Resultado, error) {
	out := new(Resultado)
	err := grpc.Invoke(ctx, "/ServidorPedidos.Pedidos/Buscar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pedidosClient) Excluir(ctx context.Context, in *RegistroPedido, opts ...grpc.CallOption) (*PedidoResponse, error) {
	out := new(PedidoResponse)
	err := grpc.Invoke(ctx, "/ServidorPedidos.Pedidos/Excluir", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Pedidos service

type PedidosServer interface {
	Salvar(context.Context, *RegistroPedido) (*PedidoResponse, error)
	Buscar(context.Context, *ModoBusca) (*Resultado, error)
	Excluir(context.Context, *RegistroPedido) (*PedidoResponse, error)
}

func RegisterPedidosServer(s *grpc.Server, srv PedidosServer) {
	s.RegisterService(&_Pedidos_serviceDesc, srv)
}

func _Pedidos_Salvar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistroPedido)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PedidosServer).Salvar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServidorPedidos.Pedidos/Salvar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PedidosServer).Salvar(ctx, req.(*RegistroPedido))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pedidos_Buscar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModoBusca)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PedidosServer).Buscar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServidorPedidos.Pedidos/Buscar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PedidosServer).Buscar(ctx, req.(*ModoBusca))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pedidos_Excluir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistroPedido)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PedidosServer).Excluir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServidorPedidos.Pedidos/Excluir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PedidosServer).Excluir(ctx, req.(*RegistroPedido))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pedidos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ServidorPedidos.Pedidos",
	HandlerType: (*PedidosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Salvar",
			Handler:    _Pedidos_Salvar_Handler,
		},
		{
			MethodName: "Buscar",
			Handler:    _Pedidos_Buscar_Handler,
		},
		{
			MethodName: "Excluir",
			Handler:    _Pedidos_Excluir_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ServidorPedidos.proto",
}

func init() { proto.RegisterFile("ServidorPedidos.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcd, 0x8e, 0xda, 0x3c,
	0x14, 0xc5, 0x81, 0x04, 0x72, 0x91, 0xf8, 0xd0, 0xd5, 0x57, 0xc9, 0x42, 0xa3, 0x16, 0xa5, 0x1b,
	0x56, 0xb3, 0x60, 0x16, 0x55, 0xd5, 0xdd, 0x68, 0x58, 0x8c, 0x54, 0xca, 0xc8, 0xf4, 0x05, 0x3c,
	0xf8, 0x16, 0x59, 0x0a, 0x31, 0xb5, 0x0d, 0x6a, 0xd7, 0x5d, 0xf5, 0x2d, 0xfa, 0x7c, 0x7d, 0x8a,
	0x0a, 0xc7, 0xd0, 0xcc, 0x94, 0x8a, 0x4d, 0x77, 0x3e, 0x3f, 0xce, 0xb1, 0xcf, 0xb5, 0x02, 0x2f,
	0x96, 0x64, 0xf7, 0x5a, 0x19, 0xfb, 0x40, 0x4a, 0x2b, 0xe3, 0xae, 0xb7, 0xd6, 0x78, 0x83, 0xff,
	0x3d, 0xa3, 0x8b, 0x35, 0xf4, 0x1f, 0xac, 0x51, 0x3b, 0x6f, 0xee, 0x3d, 0x6d, 0xf0, 0x0a, 0x72,
	0xad, 0x22, 0xc1, 0xd9, 0x98, 0x4d, 0x52, 0xf1, 0x9b, 0xc0, 0x21, 0xb4, 0x3f, 0x7b, 0xc5, 0x93,
	0xc0, 0x1f, 0x96, 0xf8, 0x3f, 0xa4, 0x7b, 0x59, 0x1a, 0xcb, 0xdb, 0x63, 0x36, 0x61, 0xa2, 0x06,
	0x88, 0xd0, 0xa9, 0xcc, 0x86, 0x78, 0x67, 0xcc, 0x26, 0xb9, 0x08, 0xeb, 0xe2, 0x47, 0x02, 0x03,
	0x41, 0x6b, 0xed, 0xbc, 0x35, 0x75, 0x38, 0x0e, 0x20, 0xd1, 0x2a, 0xa6, 0x24, 0x5a, 0xe1, 0x18,
	0xfa, 0x4a, 0x7a, 0x39, 0xab, 0xbc, 0x95, 0x4a, 0x86, 0x98, 0x5c, 0x34, 0xa9, 0xa6, 0x83, 0xd6,
	0x32, 0x84, 0x36, 0x1c, 0xb4, 0x96, 0x38, 0x82, 0x1e, 0x55, 0x8a, 0x2c, 0xad, 0x4c, 0x8c, 0x3f,
	0xe1, 0x83, 0xe6, 0xa9, 0xa4, 0x4f, 0xa6, 0x22, 0x9e, 0xd6, 0xda, 0x11, 0x1f, 0x2e, 0x42, 0x1b,
	0xa9, 0x4b, 0x9e, 0x05, 0xa1, 0x06, 0xf8, 0x12, 0xc0, 0x3c, 0x3a, 0xb2, 0x7b, 0xb9, 0x92, 0x86,
	0x77, 0x83, 0xd4, 0x60, 0x90, 0x43, 0x77, 0x55, 0x6a, 0xaa, 0x3c, 0xf1, 0x5e, 0x10, 0x8f, 0x10,
	0xa7, 0x90, 0x6a, 0x4f, 0x95, 0xe3, 0xf9, 0xb8, 0x3d, 0xe9, 0x4f, 0xaf, 0xae, 0x9f, 0xcf, 0xa3,
	0xd1, 0xba, 0xa8, 0xad, 0xc5, 0x57, 0x18, 0xd4, 0xaa, 0x20, 0xb7, 0x35, 0x95, 0x23, 0x7c, 0x03,
	0xd9, 0x36, 0x30, 0xa1, 0xa5, 0xfe, 0xf4, 0xd5, 0x1f, 0x9f, 0x79, 0x5a, 0xa9, 0x88, 0xf6, 0xc3,
	0xc1, 0x36, 0xe4, 0x9c, 0x5c, 0x53, 0xac, 0xf1, 0x08, 0xc3, 0x45, 0xad, 0x8d, 0x13, 0x4b, 0x45,
	0x0d, 0x8a, 0xef, 0x0c, 0xf2, 0xb9, 0x51, 0xe6, 0x76, 0xe7, 0x56, 0x12, 0x6f, 0xa0, 0xe3, 0xf5,
	0xb6, 0x0e, 0x1d, 0x9c, 0x09, 0x3d, 0x39, 0xc3, 0x4a, 0x04, 0x73, 0x9c, 0x66, 0x72, 0x9a, 0xe6,
	0xf1, 0x11, 0xb4, 0x1b, 0x8f, 0xe0, 0x35, 0x74, 0x0e, 0x3b, 0xb0, 0x07, 0x9d, 0x0f, 0x8b, 0xf9,
	0x6c, 0xd8, 0xc2, 0x0c, 0x92, 0xfb, 0xbb, 0x21, 0xc3, 0x1c, 0xd2, 0x8f, 0x8b, 0xbb, 0xc5, 0x72,
	0x98, 0x14, 0xdf, 0x18, 0xe4, 0x82, 0xdc, 0xae, 0xf4, 0x52, 0x19, 0x7c, 0x0b, 0xdd, 0xfa, 0x4e,
	0x8e, 0xb3, 0x50, 0xe5, 0xc5, 0x0e, 0x8e, 0x7e, 0x7c, 0x07, 0x3d, 0x1b, 0x9b, 0x0c, 0xe7, 0x3a,
	0xb7, 0xf7, 0x69, 0xe1, 0xe2, 0xb4, 0x61, 0xfa, 0x93, 0x41, 0x37, 0x9a, 0xf0, 0x3d, 0x64, 0x4b,
	0x59, 0xee, 0xa5, 0xc5, 0x4b, 0xe1, 0xa3, 0x4b, 0x09, 0x45, 0x0b, 0x6f, 0x21, 0x0b, 0xe5, 0x59,
	0x1c, 0xfd, 0xbd, 0xd9, 0xd1, 0xe8, 0x4c, 0x52, 0xec, 0xa4, 0x68, 0xe1, 0x1c, 0xba, 0xb3, 0x2f,
	0xab, 0x72, 0xa7, 0xff, 0xc9, 0x91, 0x1e, 0xb3, 0xf0, 0x77, 0xb8, 0xf9, 0x15, 0x00, 0x00, 0xff,
	0xff, 0x69, 0x2e, 0x34, 0xcb, 0x36, 0x04, 0x00, 0x00,
}
