// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ServidorProdutos.proto

/*
Package ServidorProdutos is a generated protocol buffer package.

It is generated from these files:
	ServidorProdutos.proto

It has these top-level messages:
	RegistroProduto
	ProdutoResponse
	ModoBusca
	Resultado
*/
package ServidorProdutos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ModoBusca_Modo int32

const (
	ModoBusca_NOME  ModoBusca_Modo = 0
	ModoBusca_ID    ModoBusca_Modo = 1
	ModoBusca_TODOS ModoBusca_Modo = 2
)

var ModoBusca_Modo_name = map[int32]string{
	0: "NOME",
	1: "ID",
	2: "TODOS",
}
var ModoBusca_Modo_value = map[string]int32{
	"NOME":  0,
	"ID":    1,
	"TODOS": 2,
}

func (x ModoBusca_Modo) String() string {
	return proto.EnumName(ModoBusca_Modo_name, int32(x))
}
func (ModoBusca_Modo) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type RegistroProduto struct {
	Id           int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Nome         string  `protobuf:"bytes,2,opt,name=nome" json:"nome,omitempty"`
	PrecoUnidade float64 `protobuf:"fixed64,3,opt,name=precoUnidade" json:"precoUnidade,omitempty"`
	DataCadastro string  `protobuf:"bytes,4,opt,name=dataCadastro" json:"dataCadastro,omitempty"`
}

func (m *RegistroProduto) Reset()                    { *m = RegistroProduto{} }
func (m *RegistroProduto) String() string            { return proto.CompactTextString(m) }
func (*RegistroProduto) ProtoMessage()               {}
func (*RegistroProduto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegistroProduto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RegistroProduto) GetNome() string {
	if m != nil {
		return m.Nome
	}
	return ""
}

func (m *RegistroProduto) GetPrecoUnidade() float64 {
	if m != nil {
		return m.PrecoUnidade
	}
	return 0
}

func (m *RegistroProduto) GetDataCadastro() string {
	if m != nil {
		return m.DataCadastro
	}
	return ""
}

type ProdutoResponse struct {
	Message   string           `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Rprodutor *RegistroProduto `protobuf:"bytes,2,opt,name=rprodutor" json:"rprodutor,omitempty"`
	Error     int32            `protobuf:"varint,3,opt,name=error" json:"error,omitempty"`
}

func (m *ProdutoResponse) Reset()                    { *m = ProdutoResponse{} }
func (m *ProdutoResponse) String() string            { return proto.CompactTextString(m) }
func (*ProdutoResponse) ProtoMessage()               {}
func (*ProdutoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProdutoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProdutoResponse) GetRprodutor() *RegistroProduto {
	if m != nil {
		return m.Rprodutor
	}
	return nil
}

func (m *ProdutoResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

type ModoBusca struct {
	Tipo ModoBusca_Modo `protobuf:"varint,1,opt,name=tipo,enum=ServidorProdutos.ModoBusca_Modo" json:"tipo,omitempty"`
	Id   int32          `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Nome string         `protobuf:"bytes,3,opt,name=nome" json:"nome,omitempty"`
}

func (m *ModoBusca) Reset()                    { *m = ModoBusca{} }
func (m *ModoBusca) String() string            { return proto.CompactTextString(m) }
func (*ModoBusca) ProtoMessage()               {}
func (*ModoBusca) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ModoBusca) GetTipo() ModoBusca_Modo {
	if m != nil {
		return m.Tipo
	}
	return ModoBusca_NOME
}

func (m *ModoBusca) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ModoBusca) GetNome() string {
	if m != nil {
		return m.Nome
	}
	return ""
}

type Resultado struct {
	Produtos []*RegistroProduto `protobuf:"bytes,1,rep,name=produtos" json:"produtos,omitempty"`
	Response *ProdutoResponse   `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (m *Resultado) Reset()                    { *m = Resultado{} }
func (m *Resultado) String() string            { return proto.CompactTextString(m) }
func (*Resultado) ProtoMessage()               {}
func (*Resultado) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Resultado) GetProdutos() []*RegistroProduto {
	if m != nil {
		return m.Produtos
	}
	return nil
}

func (m *Resultado) GetResponse() *ProdutoResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*RegistroProduto)(nil), "ServidorProdutos.RegistroProduto")
	proto.RegisterType((*ProdutoResponse)(nil), "ServidorProdutos.ProdutoResponse")
	proto.RegisterType((*ModoBusca)(nil), "ServidorProdutos.ModoBusca")
	proto.RegisterType((*Resultado)(nil), "ServidorProdutos.Resultado")
	proto.RegisterEnum("ServidorProdutos.ModoBusca_Modo", ModoBusca_Modo_name, ModoBusca_Modo_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Produtos service

type ProdutosClient interface {
	Salvar(ctx context.Context, in *RegistroProduto, opts ...grpc.CallOption) (*ProdutoResponse, error)
	Buscar(ctx context.Context, in *ModoBusca, opts ...grpc.CallOption) (*Resultado, error)
	Excluir(ctx context.Context, in *RegistroProduto, opts ...grpc.CallOption) (*ProdutoResponse, error)
}

type produtosClient struct {
	cc *grpc.ClientConn
}

func NewProdutosClient(cc *grpc.ClientConn) ProdutosClient {
	return &produtosClient{cc}
}

func (c *produtosClient) Salvar(ctx context.Context, in *RegistroProduto, opts ...grpc.CallOption) (*ProdutoResponse, error) {
	out := new(ProdutoResponse)
	err := grpc.Invoke(ctx, "/ServidorProdutos.Produtos/Salvar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *produtosClient) Buscar(ctx context.Context, in *ModoBusca, opts ...grpc.CallOption) (*Resultado, error) {
	out := new(Resultado)
	err := grpc.Invoke(ctx, "/ServidorProdutos.Produtos/Buscar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *produtosClient) Excluir(ctx context.Context, in *RegistroProduto, opts ...grpc.CallOption) (*ProdutoResponse, error) {
	out := new(ProdutoResponse)
	err := grpc.Invoke(ctx, "/ServidorProdutos.Produtos/Excluir", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Produtos service

type ProdutosServer interface {
	Salvar(context.Context, *RegistroProduto) (*ProdutoResponse, error)
	Buscar(context.Context, *ModoBusca) (*Resultado, error)
	Excluir(context.Context, *RegistroProduto) (*ProdutoResponse, error)
}

func RegisterProdutosServer(s *grpc.Server, srv ProdutosServer) {
	s.RegisterService(&_Produtos_serviceDesc, srv)
}

func _Produtos_Salvar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistroProduto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdutosServer).Salvar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServidorProdutos.Produtos/Salvar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdutosServer).Salvar(ctx, req.(*RegistroProduto))
	}
	return interceptor(ctx, in, info, handler)
}

func _Produtos_Buscar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModoBusca)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdutosServer).Buscar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServidorProdutos.Produtos/Buscar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdutosServer).Buscar(ctx, req.(*ModoBusca))
	}
	return interceptor(ctx, in, info, handler)
}

func _Produtos_Excluir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistroProduto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProdutosServer).Excluir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServidorProdutos.Produtos/Excluir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProdutosServer).Excluir(ctx, req.(*RegistroProduto))
	}
	return interceptor(ctx, in, info, handler)
}

var _Produtos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ServidorProdutos.Produtos",
	HandlerType: (*ProdutosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Salvar",
			Handler:    _Produtos_Salvar_Handler,
		},
		{
			MethodName: "Buscar",
			Handler:    _Produtos_Buscar_Handler,
		},
		{
			MethodName: "Excluir",
			Handler:    _Produtos_Excluir_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ServidorProdutos.proto",
}

func init() { proto.RegisterFile("ServidorProdutos.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xb1, 0x6f, 0xe2, 0x30,
	0x14, 0xc6, 0x71, 0x48, 0x02, 0x79, 0x77, 0x82, 0xe8, 0xe9, 0x74, 0x8a, 0x60, 0xc9, 0xf9, 0x16,
	0x26, 0x06, 0xee, 0xd6, 0xaa, 0x52, 0x0b, 0x43, 0x07, 0x0a, 0x35, 0xed, 0x1f, 0xe0, 0x62, 0x0b,
	0x45, 0x02, 0x1c, 0xd9, 0x09, 0xea, 0xd2, 0xa5, 0x5b, 0xfb, 0xff, 0x76, 0xaf, 0x62, 0x02, 0x08,
	0x68, 0x4b, 0x87, 0x6e, 0xf6, 0xd3, 0xf7, 0xf9, 0xfb, 0xde, 0x4f, 0x32, 0xfc, 0x9e, 0x48, 0xbd,
	0x4a, 0x84, 0xd2, 0x63, 0xad, 0x44, 0x9e, 0x29, 0xd3, 0x4d, 0xb5, 0xca, 0x14, 0x86, 0x87, 0x73,
	0xfa, 0x08, 0x4d, 0x26, 0x67, 0x89, 0xc9, 0xb4, 0x2a, 0x67, 0xd8, 0x00, 0x27, 0x11, 0x11, 0x89,
	0x49, 0xc7, 0x63, 0x4e, 0x22, 0x10, 0xc1, 0x5d, 0xaa, 0x85, 0x8c, 0x9c, 0x98, 0x74, 0x02, 0x66,
	0xcf, 0x48, 0xe1, 0x67, 0xaa, 0xe5, 0x54, 0xdd, 0x2d, 0x13, 0xc1, 0x85, 0x8c, 0xaa, 0x31, 0xe9,
	0x10, 0xb6, 0x37, 0x2b, 0x34, 0x82, 0x67, 0xfc, 0x92, 0x0b, 0x5e, 0x3c, 0x1f, 0xb9, 0xd6, 0xbf,
	0x37, 0xa3, 0x4f, 0x04, 0x9a, 0x65, 0x2e, 0x93, 0x26, 0x55, 0x4b, 0x23, 0x31, 0x82, 0xda, 0x42,
	0x1a, 0xc3, 0x67, 0xd2, 0x96, 0x08, 0xd8, 0xe6, 0x8a, 0xe7, 0x10, 0xe8, 0x74, 0xad, 0xd6, 0xb6,
	0xce, 0x8f, 0xde, 0x9f, 0xee, 0xd1, 0xaa, 0x07, 0xfb, 0xb0, 0x9d, 0x07, 0x7f, 0x81, 0x27, 0xb5,
	0x56, 0xda, 0xf6, 0xf5, 0xd8, 0xfa, 0x42, 0x5f, 0x08, 0x04, 0x43, 0x25, 0xd4, 0x45, 0x6e, 0xa6,
	0x1c, 0xff, 0x83, 0x9b, 0x25, 0xa9, 0xb2, 0xd9, 0x8d, 0x5e, 0x7c, 0xfc, 0xfe, 0x56, 0x6a, 0x4f,
	0xcc, 0xaa, 0x4b, 0x68, 0xce, 0x11, 0xb4, 0xea, 0x0e, 0x1a, 0xfd, 0x0b, 0x6e, 0xe1, 0xc0, 0x3a,
	0xb8, 0xd7, 0xa3, 0xe1, 0x20, 0xac, 0xa0, 0x0f, 0xce, 0x55, 0x3f, 0x24, 0x18, 0x80, 0x77, 0x3b,
	0xea, 0x8f, 0x26, 0xa1, 0x43, 0x9f, 0x09, 0x04, 0x4c, 0x9a, 0x7c, 0x9e, 0x71, 0xa1, 0xf0, 0x0c,
	0xea, 0x65, 0x79, 0x13, 0x91, 0xb8, 0xfa, 0xb5, 0x85, 0xb7, 0x96, 0xc2, 0xae, 0x4b, 0xac, 0x1f,
	0xf3, 0x3a, 0xe0, 0xcf, 0xb6, 0x96, 0xde, 0x2b, 0x81, 0xfa, 0x46, 0x86, 0x63, 0xf0, 0x27, 0x7c,
	0xbe, 0xe2, 0x1a, 0x4f, 0x57, 0x68, 0x9d, 0x8e, 0xa1, 0x15, 0xec, 0x83, 0x6f, 0x39, 0x6a, 0x6c,
	0x7f, 0x42, 0xb9, 0xd5, 0x7e, 0x2f, 0xae, 0x04, 0x44, 0x2b, 0x78, 0x03, 0xb5, 0xc1, 0xc3, 0x74,
	0x9e, 0x27, 0xdf, 0x56, 0xec, 0xde, 0xb7, 0xbf, 0xe5, 0xdf, 0x5b, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x54, 0xb5, 0xcc, 0x2b, 0x47, 0x03, 0x00, 0x00,
}
